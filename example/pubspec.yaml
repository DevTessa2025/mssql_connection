name: mssql_connection_example
version: 1.0.0

description: >
  A robust and efficient Flutter plugin for connecting to Microsoft SQL Server databases using the JTDS driver.
  This plugin provides seamless integration with your Flutter application, enabling you to perform database operations,
  such as querying data, writing data, connecting, and disconnecting, with ease.

  Key Features:
  - Connect to Microsoft SQL Server databases with customizable connection parameters.
  - Execute SQL queries to retrieve data as JSON-encoded results.
  - Perform database write operations, including inserts, updates, and deletes, with transaction support.
  - Automatic reconnection handling for improved robustness in case of connection interruptions.
  - Configurable timeout for database connections to manage response times.

  Usage:
  - Integrate the plugin into your Flutter app to establish secure connections to Microsoft SQL Server databases.
  - Execute complex SQL queries and retrieve results in JSON format for seamless integration with your application's logic.
  - Effortlessly manage database write operations, ensuring data consistency and integrity.
  - Utilize the plugin's automatic reconnection mechanism to handle network interruptions gracefully.
  - Customize connection parameters, including URL, username, password, and timeout, to suit your application's needs.

  Note: This plugin assumes the usage of the JTDS JDBC driver for connecting to Microsoft SQL Server databases.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
 # Remove this line if you wish to publish to pub.dev

environment:
  sdk: '>=3.0.5 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  mssql_connection: 1.0.0
    # When depending on this package from a real application you should use:
    #   mssql_connection: ^x.y.
    # See https://dart.dev/tools/pub/dependencies#version-constraints
    # The example app is bundled with the plugin so we use a path dependency on
    # the parent directory to use the current plugin's version.
  

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  fluttertoast: ^8.2.4

dev_dependencies:
  integration_test:
    sdk: flutter
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
